C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\build.gradle:9: Warning: Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details. [OldTargetApi]
        targetSdk 34
        ~~~~~~~~~~~~

   Explanation for issues of type "OldTargetApi":
   When your application or sdk runs on a version of Android that is more
   recent than your targetSdkVersion specifies that it has been tested with,
   various compatibility modes kick in. This ensures that your application
   continues to work, but it may look out of place. For example, if the
   targetSdkVersion is less than 14, your app may get an option button in the
   UI.

   To fix this issue, set the targetSdkVersion to the highest available value.
   Then test your app to make sure everything works correctly. You may want to
   consult the compatibility notes to see what changes apply to each version
   you are adding support for:
   https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
   as well as follow this guide:
   https://developer.android.com/distribute/best-practices/develop/target-sdk.
   html

   https://developer.android.com/distribute/best-practices/develop/target-sdk.html

C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\src\main\java\com\github\barteksc\pdfviewer\link\DefaultLinkHandler.java:51: Warning: Consider adding a <queries> declaration to your manifest when calling this method; see https://g.co/dev/packagevisibility for details [QueryPermissionsNeeded]
        if (intent.resolveActivity(context.getPackageManager()) != null) {
                   ~~~~~~~~~~~~~~~

   Explanation for issues of type "QueryPermissionsNeeded":
   Apps that target Android 11 cannot query or interact with other installed
   apps by default. If you need to query or interact with other installed
   apps, you may need to add a <queries> declaration in your manifest.

   As a corollary, the methods PackageManager#getInstalledPackages and
   PackageManager#getInstalledApplications will no longer return information
   about all installed apps. To query specific apps or types of apps, you can
   use methods like PackageManager#getPackageInfo or
   PackageManager#queryIntentActivities.

   https://g.co/dev/packagevisibility

C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.10.1 is available: 8.13.0 [AndroidGradlePluginVersion]
agp = "8.10.1"
      ~~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\build.gradle:5: Warning: A newer version of compileSdkVersion than 34 is available: 35 [GradleDependency]
    compileSdk 34
    ~~~~~~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\build.gradle:19: Warning: A newer version of androidx.core:core than 1.16.0 is available: 1.17.0 [GradleDependency]
    implementation 'androidx.core:core:1.16.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:3: Warning: A newer version of org.jetbrains.kotlin.android than 2.0.21 is available: 2.2.10 [GradleDependency]
kotlin = "2.0.21"
         ~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:4: Warning: A newer version of androidx.core:core-ktx than 1.16.0 is available: 1.17.0 [GradleDependency]
coreKtx = "1.16.0"
          ~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:10: Warning: A newer version of androidx.activity:activity than 1.10.1 is available: 1.11.0 [GradleDependency]
activity = "1.10.1"
           ~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:14: Warning: A newer version of androidx.navigation:navigation-fragment-ktx than 2.7.7 is available: 2.9.4 [GradleDependency]
navigation = "2.7.7"
             ~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:14: Warning: A newer version of androidx.navigation:navigation-ui-ktx than 2.7.7 is available: 2.9.4 [GradleDependency]
navigation = "2.7.7"
             ~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\Dat\.gradle\caches\8.11.1\transforms\91820580bbe3efae114b2f8917b0d472\transformed\PdfiumAndroid-pdfium-android-1.9.2\jni\arm64-v8a\libc++_shared.so: Warning: The native library arm64-v8a/libc++_shared.so (from com.github.DineroRegnskab:PdfiumAndroid:pdfium-android-1.9.2) is not 16 KB aligned [Aligned16KB]
C:\Users\Dat\.gradle\caches\8.11.1\transforms\91820580bbe3efae114b2f8917b0d472\transformed\PdfiumAndroid-pdfium-android-1.9.2\jni\arm64-v8a\libc++_shared.so: Warning: The native library arm64-v8a/libc++_shared.so (from com.github.DineroRegnskab:PdfiumAndroid:pdfium-android-1.9.2) is not 16 KB aligned [Aligned16KB]
C:\Users\Dat\Desktop\PDF-Tool\gradle\libs.versions.toml:38: Warning: The native library arm64-v8a/libc++_shared.so (from com.github.DineroRegnskab:PdfiumAndroid:pdfium-android-1.9.2) is not 16 KB aligned [Aligned16KB]
pdfiumandroid = { group = "com.github.DineroRegnskab", name = "PdfiumAndroid", version.ref = "pdfiumandroid" }
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "Aligned16KB":
   Android has traditionally used 4 KB memory page sizes. However, to support
   future devices that only work with 16 KB aligned libraries apps containing
   native libraries need to be built with 16 KB alignment.

   Apps with 4 KB aligned native libraries may not work correctly on devices
   requiring 16 KB alignment. To ensure compatibility and future-proof your
   app, it is strongly recommended that your native libraries are aligned to
   16 KB boundaries.

   If your app uses any NDK libraries, directly or indirectly through an SDK,
   you should rebuild your app to meet this recommendation. Make sure all
   native libraries within your application, including those from
   dependencies, are built with 16 KB page alignment.

   This lint check looks at all native libraries that your app depends on. If
   any are found to be aligned to 4 KB instead of 16 KB, you will need to
   address this.

   When a library is flagged, first try to update to a newer version that
   supports 16 KB alignment. If an updated version is not available, contact
   the library vendor to ask about their plans for 16 KB support and request a
   compatible version. Updating your libraries proactively will help ensure
   your app works properly on a wider range of devices.

   https://developer.android.com/guide/practices/page-sizes

C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\src\main\java\com\github\barteksc\pdfviewer\PDFView.java:486: Warning: Unnecessary; SDK_INT is always >= 24 [ObsoleteSdkInt]
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ObsoleteSdkInt":
   This check flags version checks that are not necessary, because the
   minSdkVersion (or surrounding known API level) is already at least as high
   as the version checked for.

   Similarly, it also looks for resources in -vNN folders, such as values-v14
   where the version qualifier is less than or equal to the minSdkVersion,
   where the contents should be merged into the best folder.

C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\build.gradle:17: Warning: Use the existing version catalog reference (libs.pdfiumandroid) instead [UseTomlInstead]
    api 'com.github.DineroRegnskab:PdfiumAndroid:pdfium-android-1.9.2'
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\build.gradle:19: Warning: Use version catalog instead [UseTomlInstead]
    implementation 'androidx.core:core:1.16.0'
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\src\main\java\com\github\barteksc\pdfviewer\scroll\DefaultScrollHandle.java:203: Warning: Custom view DefaultScrollHandle overrides onTouchEvent but not performClick [ClickableViewAccessibility]
    public boolean onTouchEvent(MotionEvent event) {
                   ~~~~~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\src\main\java\com\github\barteksc\pdfviewer\DragPinchManager.java:55: Warning: Custom view `PDFView` has setOnTouchListener called on it but does not override performClick [ClickableViewAccessibility]
        pdfView.setOnTouchListener(this);
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Dat\Desktop\PDF-Tool\android-pdf-viewer\src\main\java\com\github\barteksc\pdfviewer\DragPinchManager.java:288: Warning: DragPinchManager#onTouch should call View#performClick when a click is detected [ClickableViewAccessibility]
    public boolean onTouch(View v, MotionEvent event) {
                   ~~~~~~~

   Explanation for issues of type "ClickableViewAccessibility":
   If a View that overrides onTouchEvent or uses an OnTouchListener does not
   also implement performClick and call it when clicks are detected, the View
   may not handle accessibility actions properly. Logic handling the click
   actions should ideally be placed in View#performClick as some accessibility
   services invoke performClick when a click action should occur.

0 errors, 19 warnings
